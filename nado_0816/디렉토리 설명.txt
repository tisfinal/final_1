디렉토리 설명

자바(src) 백앤드 

[1]common.xxx  => 기본적으로 백앤드에서 셋팅을 하는 영역이라고 생각하면 편하다


common.config =>  타입별칭, 어떤디비를 쓸건지(우린 오라클) , 디비 계정 아이디와 비밀번호
이 계정으로 쓸 매퍼정의   요런식의 셋팅 하는 영역 이다  

common.dao  => 우리가 xx.model 에서 작성 할 dao들이 공통적으로 갖고 있는 것들을 담아두고  우리가 작성할 dao에서  이 dao base를 상속 받는다  

common.filter =>  마이페이지 를 눌렀을때  로그인중이 아니면(세션이 비어있다면) 마이페이지를 못 들어가게  필터를 건 것이다 . 나중에  판매자 페이지 혹은  어드민 페이지 등  더 작성할 생각이다.

…


[2] mapper => 쿼리문을 작성하는 패키지 이다.
   common.config 에서 맨밑에 리소스  에 보면   
  매퍼 정의를 해놨기 때문에   mapper 에 쿼리문들이  어느 데이터베이스 어느 계정인지 따로 적지 않아도된다   어쨋든! 쿼리문을 쓰는곳이다!
우리는 userMapper(member 테이블과 엮인 쿼리문)  serviceMapper( 호텔, 룸을 불러오는 쿼리문)

예시를좀 들자면  

1.내가 예약한 호텔을 가져와! (User)
2.내가 팔고있는 호텔을 가져와!(User)
3.호텔중에 강원도에있는 호텔가져와(service)
4.신라호텔의 방들 가져와!(service)
5.나 이 호텔 이 날짜에 이 방으로 예약할게!(user)
6.이 호텔의 평점을 가져와!!(service)
7.제일 많이 검색된 키워드를 가져와!(service)

우리의 쿼리(query 는 사전적 정의로 ‘질문’)
가 앞에  ‘나의,내가’ 라는 주어가 붙으면 user  그게아니면 service인거다

내가 쓴 평점들 가져와! (user)
신라호텔의 평점을 가져와!(service)

같은 평점을 가져오는거지만 엄연히 다르다.

Mapper 의 디렉토리 방향을 많이 생각해봤다

Select,insert,update 로 구분 할지
Member,hotel,room,reivew 로 구분할지
…다양하지만  그냥 지금처럼  두개로  끝내는게  
좋지 않을까 하는생각이 든다.  처음에는  디렉토리를 잘 만들어놔야 구분하기 쉬울것같다고 판단했지만,  각 테이블 별로 짜논다면 오히려 너무 많아서 헷갈릴 수도 있다고 생각이 든다

이 두개로 나눈게  오히려   기준도 명확하고 심플하다고 생각한다












xxx.action => 학원예제에선 xxx.controller 라고 했지만   들어갈 클래스 네임이  다 action 이라  action 으로 설정했다   추후에 바뀔수도있지만  어쨌든   이곳은  결국에   클라이언트에서  요청한 것에대한 것을  실제로  처리해 주는 기관이다.
Mapper에서 쿼리문을 쓰고  dao에서 그 쿼리문을 가지고 객채(예를들어 vo) 에 담는 함수를 작성하면   이 모든 것들을 결국엔  프론트에게 값을받아  그값을  토대로 가공(매퍼 쿼리문>dao 쿼리문으로 객채화)  하여  프론트에 다시 보내주는  역할을 한다   그냥 진짜   1.프론트에서 데이터를 받고 2.정의해놓은 dao와 vo,쿼리문 등 을  결국 *실행* 시키고
 가공된 데이터를 다시 프론트에게 응답해주는 곳이다  mvc 패턴에서 c  컨트롤러를 담당하고있다.
중간에 유효성 채크를 하기도 한다.


 Xxx.model =>  mvc 에서 model 을 담당하고있다.  VO(데이터를 담을 장바구니) , dao(디비에서   mapper 에 작성한 쿼리문을통해  나온 데이터 들을 vo로 객체화 시키거나, 쿼리문에 대한 결과 값을 (insert할 때 예를들어  pk 값이 중복(회원 아이디 같은거)  되면  0을 리턴  , 중복이 없어서 저장이 잘 되면 1을 리턴   이러한  함수를 구현 한 곳)  action 이 실행할 것들을 준비해놓고 구현하는 곳 이다